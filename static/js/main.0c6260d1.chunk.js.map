{"version":3,"sources":["components/canvas/Canvas.tsx","components/navbar/Navbar.tsx","components/toolbar/Toolbar.tsx","hooks/useDraw.ts","App.tsx","index.tsx"],"names":["Canvas","canvasRef","width","widthHalf","cursor","style","ref","Navbar","handleDownload","dataUrl","handleNew","init","save","window","confirm","console","log","current","a","document","createElement","href","download","body","appendChild","click","removeChild","className","innerWidth","target","onClick","Toolbar","handleClear","handleEraserMode","handleRegularMode","handleColor","handleWidth","handleUndo","handleRedo","handleLineMode","handleRectMode","isRegularMode","isEraser","isRect","isLine","undo","redo","disabled","icon","faPaintBrush","faEraser","faSquare","faPen","defaultValue","type","min","max","onChange","id","useDraw","canvas","useRef","useState","isReady","setIsReady","setIsEraser","setIsRect","setIsLine","currentColor","setCurrentColor","currentWidth","setCurrentWidth","undoSteps","redoStep","selectedColor","selectedLineWidth","lastX","lastY","isDrawing","isRegularPaintMode","isEraserMode","isRectMode","isLineMode","ctx","getContext","ctxOverlay","handleMouseDown","e","offsetX","offsetY","temp","push","drawNormal","strokeStyle","lineWidth","globalCompositeOperation","nativeEvent","beginPath","moveTo","lineTo","stroke","left","height","top","clearRect","strokeRect","drawOnCanvas","stopDrawing","addEventListener","getBoundingClientRect","lineJoin","lineCap","currentTarget","value","data","length","forEach","item","index","closePath","te","App","state","api","useCallback","toDataURL","toolbarProps","navbarProps","useEffect","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c6260d1.chunk.js","sourcesContent":["import React from \"react\";\nimport './style.css'\n\ninterface Props {\n  canvasRef?: React.MutableRefObject<HTMLCanvasElement | undefined>;\n  width?: number;\n}\n\nexport const Canvas: React.FC<Props> = ({ canvasRef, width }) => {\n  const widthHalf = width ? width / 2 : 0;\n  const cursor = `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"%23000000\" opacity=\"0.3\" height=\"${width}\" viewBox=\"0 0 ${width} ${width}\" width=\"${width}\"><circle cx=\"${widthHalf}\" cy=\"${widthHalf}\" r=\"${widthHalf}\" fill=\"%23000000\" /></svg>') ${widthHalf} ${widthHalf}, auto`;\n\n  return (\n    <section>\n      <canvas style={{ cursor }} ref={canvasRef as any} />\n    </section>\n  );\n};\n","import React from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar: React.FC<any> = ({ handleDownload, dataUrl, init }) => {\n  const download = () => {\n    console.log(\"downloading\", dataUrl.current);\n    const a = document.createElement(\"a\");\n    a.href = dataUrl.current;\n    a.download = \"image.png\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  const handleNew = () => {\n    const save = window.confirm(\"Do you want to save ?\");\n    console.log(dataUrl.current);\n    if (save) {\n      download();\n    }\n  };\n\n  return (\n    <>\n      <div className=\"topnav\" style={{ width: window.innerWidth }}>\n        <a className=\"active\">WHITEBOARD</a>\n        <a\n         href=\"http://hitesh-c.github.io/compiler\" \n        target=\"_blank\">\n          Compiler\n        </a>\n\n        <a\n          onClick={() => {\n            handleDownload();\n            handleNew();\n          }}\n          href={dataUrl.current}\n        >\n          Save\n        </a>\n        <a href=\"https://github.com/hitesh-c/whiteboard\">Info</a>\n      </div>\n    </>\n  );\n};\n\nexport default Navbar;\n","import {\n  faEraser,\n  faPaintBrush,\n  faPen,\n  faSquare,\n\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from 'react';\n\nimport './Toolbar.css';\n\nexport const Toolbar: React.FC<any> = ({\n  handleClear,\n  handleEraserMode,\n  handleRegularMode,\n  handleColor,\n  handleWidth,\n  handleUndo,\n  handleRedo,\n  handleLineMode,\n  handleRectMode,\n  isRegularMode,\n  isEraser,\n  isRect,\n  isLine,\n  undo,\n  redo,\n  \n}) => {\n  return (\n    <>\n    <div className= \"toolbar\">\n    <button className=\"btn btn--block\"  disabled={undo === 0}onClick={handleUndo}>\n          Undo\n        </button>\n        <br></br>\n        <button className=\"btn btn--block\"  disabled={redo === 0} onClick={handleRedo}>\n          Redo\n        </button>\n        <br></br>\n        <button className=\"btn btn--block\" onClick={handleClear}>\n          Clear\n        </button>\n      \n      <div>\n\n        <div className=\"tool-section tool-section--lrg tool-container\">       \n\n\n        <div className=\"tool-section\">\n          <small>\n            <strong>Tools</strong>\n          </small>\n        </div>\n\n\n        {/* paint brush */}\n        <div className=\"tool-grid tool-section tool-section--lrg\">\n          <div>\n            <button\n              className={`btn btn--tool ${\n                isRegularMode.current && !isEraser ? \"btn--active\" : \"\"\n              }`}\n              onClick={handleRegularMode}\n             \n            >\n              <FontAwesomeIcon icon={faPaintBrush} />\n            </button>\n          </div>\n\n          {/* eraser */}\n          <div>\n            <button\n              className={`btn btn--tool ${\n                isEraser ? \"btn--active\" : \"\"\n              }`}\n              onClick={handleEraserMode}\n             \n            >\n             <FontAwesomeIcon icon={faEraser} />\n            </button>\n          </div>\n\n           {/* rectangle */}    \n          <div>\n            <button\n              className={`btn btn--tool ${\n                isRect ? \"btn--active\" : \"\"\n              }`}\n              onClick={handleRectMode}\n              \n            >\n              <FontAwesomeIcon icon={faSquare} />\n            </button>\n          </div>\n\n           {/* line */}    \n           <div>\n            <button\n              className={`btn btn--tool ${\n                isLine ? \"btn--active\" : \"\"\n              }`}\n              onClick={handleLineMode}\n             \n            >\n              <FontAwesomeIcon icon={faPen} />\n            </button>\n          </div>\n\n        </div>\n        \n          <div className=\"tool-section tool-section--lrg\">\n            <div className=\"tool-section\">\n              <small>\n                <strong>Brush size</strong>\n              </small>\n            </div>\n            <div className=\"tool-section\">\n              <input\n                defaultValue=\"15\"\n                type=\"range\"\n                min=\"5\"\n                max=\"90\"\n                onChange={handleWidth}\n              />\n            </div>\n          </div>\n        \n        {/* { (\n          <div className=\"tool-section tool-section--lrg\"></div>\n        )} */}\n\n         {/* color */}\n         <div className=\"tool-section\">\n            <small>\n              <strong>Select Color</strong>\n            </small>\n          </div>\n          <input\n            className=\"btn--color\"\n            type=\"color\"\n            id=\"toolColorPicker\"\n            onChange={handleColor}\n          />\n        </div>\n      </div>\n\n      \n\n\n      <div>\n      </div>\n    </div>\n    </>\n  );\n};\n","import { useRef, useState } from 'react';\n\nexport const useDraw = () => {\n  const canvas = useRef<HTMLCanvasElement>() as any;\n  const [isReady, setIsReady] = useState(false);\n  const [isEraser, setIsEraser] = useState(false);\n  const [isRect, setIsRect] = useState(false);\n  const [isLine, setIsLine] = useState(false);\n\n  const [currentColor, setCurrentColor] = useState(\"#000000\");\n  const [currentWidth, setCurrentWidth] = useState(50);\n\n  const undoSteps = useRef({}) as any;\n  const redoStep = useRef({}) as any;\n  const undo = useRef(0);\n  const redo = useRef(0);\n\n  const selectedColor = useRef(\"#000000\");\n  const selectedLineWidth = useRef(5);\n  const lastX = useRef(0);\n  const lastY = useRef(0);\n  const isDrawing = useRef(false);\n  const isRegularPaintMode = useRef(true);\n  const isEraserMode = useRef(false);\n  const isRectMode = useRef(false);\n  const isLineMode = useRef(false);\n  const isRegularMode = useRef(true);\n\n  const ctx: any = useRef(canvas?.current?.getContext(\"2d\"));\n  const ctxOverlay: any = useRef();\n  console.log('custom hook called');\n\n  const drawOnCanvas = (nativeEvent: any) => {\n    if (!isDrawing) {\n      return;\n    }\n    const { offsetX, offsetY } = nativeEvent;\n\n    if (!ctx || !ctx.current) {\n      return;\n    }\n\n    if(isRegularMode.current){\n      console.log(\"Drawing\");\n      ctx.current.beginPath();\n      ctx.current.moveTo(lastX.current, lastY.current);\n      ctx.current.lineTo(offsetX, offsetY);\n      ctx.current.stroke();\n      [lastX.current, lastY.current] = [offsetX, offsetY];\n\n    }\n    // console.log(isRectMode)\n\n     if(isRectMode.current){\n      // console.log(ctx.current)\n      // ctx.current.clearRect(0, 0, , 480);\n      let width =    (offsetX-ctxOverlay.current.left);\n       let height =  (offsetY-ctxOverlay.current.top); \n      //  ctx.current.clearRect(lastX.current-1,lastY.current-1, width, height);\n       ctx.current.clearRect(0,0, canvas.current.width, canvas.current.height);\n       ctx.current.beginPath();\n       ctx.current.strokeRect(offsetX, offsetY, width, height);\n      console.log('stroking rect');\n       [lastX.current, lastY.current] = [offsetX, offsetY];\n      //  let lastWidth= width;\n      //  let lastHeight= height;\n      //  ctx.current.clearRect(offsetX,offsetY, lastWidth+10, lastHeight+10);\n      //todo\n      // ctx.current.stroke();\n    }\n    \n    if(isLineMode.current){\n      console.log('inside line');\n      ctx.current.clearRect(0,0, canvas.current.width, canvas.current.height);\n      ctx.current.beginPath();\n      ctx.current.moveTo(offsetX, offsetY);\n      ctx.current.lineTo(lastX.current, lastY.current);\n      ctx.current.stroke();\n    }\n\n    \n    // console.log(undo, undoSteps)\n    const temp = {\n      ...undoSteps.current,\n    } as any;\n\n    temp[undo.current].push({ offsetX, offsetY }) as any;\n    undoSteps.current = temp;\n    // console.log(undoSteps);\n  };\n\n  const handleMouseDown = (e: any) => {\n    [lastX.current, lastY.current] = [e.offsetX, e.offsetY];\n    const { offsetX, offsetY } = e;\n    const temp = {\n      ...undoSteps.current,\n      [undo.current + 1]: [],\n    };\n    temp[undo.current + 1].push({ offsetX, offsetY });\n    // console.log(undo, undoSteps.current) \n    undoSteps.current = temp;\n    undo.current = undo.current + 1;\n    // console.log(undo, undoSteps.current)\n    isDrawing.current = true;\n  };\n\n  const handleUndo = () => {\n    // console.log('undo called', undoSteps.current)\n    if (undo.current > 0) {\n      const data = undoSteps.current[undo.current];\n      if (data && data.length === 0) {\n        // console.log(data);\n        undo.current = undo.current + 1;\n        redo.current = redo.current - 1;\n        return;\n      }\n      // console.log('undo called', data)\n      ctx.current.strokeStyle = \"white\";\n      ctx.current.beginPath();\n      ctx.current.lineWidth = selectedLineWidth.current + 1;\n      ctx.current.moveTo(data[0].offsetX, data[0].offsetY);\n      data.forEach((item: any, index: number) => {\n        if (index !== 0) {\n          ctx.current.lineTo(item.offsetX, item.offsetY);\n          ctx.current.stroke();\n        }\n      });\n      ctx.current.closePath();\n      ctx.current.strokeStyle = \"black\";\n      const temp = {\n        ...undoSteps.current,\n        [undo.current]: [],\n      };\n      const te = {\n        ...redoStep.current,\n        [redo.current + 1]: [...data],\n      };\n      undo.current = undo.current - 1;\n      redo.current = redo.current + 1;\n      redoStep.current = te;\n      undoSteps.current = temp;\n    }\n  };\n\n  const handleRedo = () => {\n    if (redo.current > 0) {\n      const data = redoStep.current[redo.current];\n      if (data && data.length === 0) {\n        // console.log(data);\n        undo.current = undo.current + 1;\n        redo.current = redo.current - 1;\n        return;\n      }\n      // console.log(\"redo called\", data);\n\n      ctx.current.strokeStyle = \"black\";\n      ctx.current.beginPath();\n      ctx.current.lineWidth = selectedLineWidth.current;\n      ctx.current.moveTo(data[0].offsetX, data[0].offsetY);\n      data.forEach((item: any, index: number) => {\n        if (index !== 0) {\n          ctx.current.lineTo(item.offsetX, item.offsetY);\n          ctx.current.stroke();\n        }\n      });\n\n      ctx.current.closePath();\n      const temp = {\n        ...redoStep.current,\n        [redo.current]: [],\n      };\n\n      redoStep.current = temp;\n      const te = {\n        ...undoSteps.current,\n        [undo.current + 1]: [...data],\n      };\n\n      undoSteps.current = te;\n    }\n  };\n\n  const drawNormal = (e: any) => {\n    if (!isDrawing.current || !ctx.current) return;\n\n    if (isRegularPaintMode.current || isEraserMode.current) {\n      \n      ctx.current.strokeStyle = selectedColor.current;\n\n      setCurrentColor(selectedColor.current);\n      ctx.current.lineWidth = selectedLineWidth.current;\n      // console.log(isEraserMode.current)\n      isEraserMode.current\n        ? (ctx.current.globalCompositeOperation = \"destination-out\")\n        : (ctx.current.globalCompositeOperation = \"source-over\");\n\n    }\n\n    drawOnCanvas(e);\n  };\n\n  const stopDrawing = () => {\n    isDrawing.current = false;\n  };\n\n  const init = () => {\n\n    ctx.current = canvas?.current?.getContext(\"2d\");\n    if (canvas && canvas.current && ctx && ctx.current) {\n      canvas.current.addEventListener(\"mousedown\", handleMouseDown);\n      canvas.current.addEventListener(\"mousemove\", drawNormal);\n      canvas.current.addEventListener(\"mouseup\", stopDrawing);\n      canvas.current.addEventListener(\"mouseout\", stopDrawing);\n\n\n    //   const width = prompt('Please enter canvas width')\n    //   const height = prompt('Please enter canvas height')\n    //   if(width && height) {\n    //   canvas.current.width = width;\n    //   canvas.current.height = height;\n    //  }\n    //  else { \n    //    window.alert('Cant initialise with empty dimensions, try again later.');\n    //    return;\n    //  }\n    canvas.current.width = '1000';\n    canvas.current.height = '500';\n      ctxOverlay.current= canvas.current?.getBoundingClientRect()\n\n      ctx.current.strokeStyle = \"#000\";\n      ctx.current.lineJoin = \"round\";\n      ctx.current.lineCap = \"round\";\n      ctx.current.lineWidth = 6;\n      setIsReady(true);\n      setCurrentWidth(15);\n      // console.log(\"init called\");\n    }\n  };\n\n  const handleColor = (e: any) => {\n    setCurrentColor(e.currentTarget.value);\n    selectedColor.current = e.currentTarget.value;\n    isEraserMode.current=false;\n  };\n\n  const handleWidth = (e: any) => {\n    setCurrentWidth(e.currentTarget.value);\n    selectedLineWidth.current = e.currentTarget.value;\n  };\n\n  const handleClear = () => {\n    if (!ctx || !ctx.current || !canvas || !canvas.current) {\n      return;\n    }\n    ctx.current.clearRect(0, 0, canvas.current.width, canvas.current.height);\n  };\n\n  const handleRegularMode = () => {\n    isRegularPaintMode.current = true;\n    isRegularMode.current=true;\n    \n    setIsEraser(false);\n    setIsRect(false);\n    setIsLine(false);\n    isLineMode.current = false;\n    isRectMode.current=false;\n    isEraserMode.current = false;\n    \n  };\n\n  const handleEraserMode = () => {\n    isEraserMode.current = true;\n    setIsEraser(true);\n   \n\n    setIsRect(false);\n    isRegularMode.current=true;\n    setIsLine(false);\n    isLineMode.current = false;\n    isRectMode.current=false;\n    isRegularPaintMode.current =true;\n  };\n\n  const handleRectMode = () => {  \n    isRectMode.current = true;\n    setIsRect(true);\n\n    isRegularMode.current=false;\n    setIsLine(false);\n    setIsEraser(false);\n    isLineMode.current = false;\n    isRegularPaintMode.current = true;\n    isEraserMode.current = false;\n    // console.log('rect called', isLineMode.current,\n    // isEraserMode.current)\n  };\n\n  const handleLineMode = () => {\n\n    setIsLine(true);\n    isLineMode.current = true;\n    isRegularPaintMode.current=true\n\n    setIsRect(false);\n    isRegularMode.current=false;\n    setIsLine(false);\n    setIsEraser(false);\n    isRectMode.current=false;\n  \n   \n\n  };\n\n  return [\n    {\n      canvas,\n      isReady,\n      currentWidth,\n      currentColor,\n      isRegularMode,\n      isEraser,\n      isRect,\n      isLine,\n      undo,\n      redo,\n    },\n    {\n      init,\n      handleRegularMode,\n      handleColor,\n      handleWidth,\n      handleClear,\n      handleEraserMode,\n      handleUndo,\n      handleRedo,\n      handleRectMode,\n      handleLineMode,\n    },\n  ] as any;\n};\n","import { useCallback, useEffect, useRef } from 'react';\nimport { Canvas } from \"./components/canvas/Canvas\";\nimport Navbar from './components/navbar/Navbar';\nimport { Toolbar } from \"./components/toolbar/Toolbar\";\nimport { useDraw } from \"./hooks/useDraw\";\n\n\n\nconst App = () => {\n  const dataUrl = useRef('#'); \n  const [{ canvas, isReady, ...state }, { init, ...api }] = useDraw();\n\n  const handleDownload = useCallback(() => {\n    console.log('download called', dataUrl.current);\n    if (!canvas || !canvas.current) return;\n    dataUrl.current=canvas.current.toDataURL(\"image/png\");\n    console.log('download called', dataUrl.current);\n  }, [canvas]);\n  console.log('rerender');\n\n  const toolbarProps = { ...state, ...api, dataUrl, handleDownload };\n  const navbarProps = { ...state, init,...api, dataUrl, handleDownload };\n\n  //initialising \n  useEffect(()=>{\n    init();\n  },[])\n\n  return (\n    < >\n      <Navbar {...navbarProps} />\n      <Toolbar {...toolbarProps} />\n      <Canvas width={state.currentWidth} canvasRef={canvas} />\n      \n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}